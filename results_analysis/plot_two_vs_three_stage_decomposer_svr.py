import matplotlib.pyplot as plt
plt.rcParams['font.size']=10
import pandas as pd
import numpy as np
import os
root_path = os.path.dirname(os.path.abspath('__file__'))
# root_path = os.path.abspath(os.path.join(root_path,os.path.pardir))
graphs_path = root_path+'/results_analysis/graphs/'
import sys
sys.path.append(root_path+'/tools/')
from results_reader import read_two_stage
from fit_line import compute_linear_fit,compute_2_linear_fit

# multi-step decomposition ensemble models
huaxian_eemd = pd.read_csv(root_path+'/Huaxian_eemd/projects/esvr/multi_step_1_month_forecast/esvr_Huaxian_eemd_sum_test_result.csv')
huaxian_ssa = pd.read_csv(root_path+'/Huaxian_ssa/projects/esvr/multi_step_1_month_forecast/esvr_Huaxian_ssa_sum_test_result.csv')
huaxian_vmd = pd.read_csv(root_path+'/Huaxian_vmd/projects/esvr/multi_step_1_month_forecast/esvr_Huaxian_vmd_sum_test_result.csv')
huaxian_wd = pd.read_csv(root_path+'/Huaxian_wd/projects/esvr/db10-lev2/multi_step_1_month_forecast/esvr_Huaxian_wd_sum_test_result.csv')

xianyang_eemd = pd.read_csv(root_path+'/Xianyang_eemd/projects/esvr/multi_step_1_month_forecast/esvr_Xianyang_eemd_sum_test_result.csv')
xianyang_ssa = pd.read_csv(root_path+'/Xianyang_ssa/projects/esvr/multi_step_1_month_forecast/esvr_Xianyang_ssa_sum_test_result.csv')
xianyang_vmd = pd.read_csv(root_path+'/Xianyang_vmd/projects/esvr/multi_step_1_month_forecast/esvr_Xianyang_vmd_sum_test_result.csv')
xianyang_wd = pd.read_csv(root_path+'/Xianyang_wd/projects/esvr/db10-lev2/multi_step_1_month_forecast/esvr_Xianyang_wd_sum_test_result.csv')

zhangjiashan_eemd = pd.read_csv(root_path+'/Zhangjiashan_eemd/projects/esvr/multi_step_1_month_forecast/esvr_Zhangjiashan_eemd_sum_test_result.csv')
zhangjiashan_ssa = pd.read_csv(root_path+'/Zhangjiashan_ssa/projects/esvr/multi_step_1_month_forecast/esvr_Zhangjiashan_ssa_sum_test_result.csv')
zhangjiashan_vmd = pd.read_csv(root_path+'/Zhangjiashan_vmd/projects/esvr/multi_step_1_month_forecast/esvr_Zhangjiashan_vmd_sum_test_result.csv')
zhangjiashan_wd = pd.read_csv(root_path+'/Zhangjiashan_wd/projects/esvr/db10-lev2/multi_step_1_month_forecast/esvr_Zhangjiashan_wd_sum_test_result.csv')

h_vmd_records,h_vmd_predictions,h_vmd_r2,h_vmd_rmse,h_vmd_mae,h_vmd_mape,h_vmd_ppts,h_vmd_timecost = read_two_stage(station="Huaxian",decomposer="vmd",predict_pattern="one_step_1_month_forecast")
x_vmd_records,x_vmd_predictions,x_vmd_r2,x_vmd_rmse,x_vmd_mae,x_vmd_mape,x_vmd_ppts,x_vmd_timecost = read_two_stage(station="Xianyang",decomposer="vmd",predict_pattern="one_step_1_month_forecast")
z_vmd_records,z_vmd_predictions,z_vmd_r2,z_vmd_rmse,z_vmd_mae,z_vmd_mape,z_vmd_ppts,z_vmd_timecost = read_two_stage(station="Zhangjiashan",decomposer="vmd",predict_pattern="one_step_1_month_forecast")

h_eemd_records,h_eemd_predictions,h_eemd_r2,h_eemd_rmse,h_eemd_mae,h_eemd_mape,h_eemd_ppts,h_eemd_timecost = read_two_stage(station="Huaxian",decomposer="eemd",predict_pattern="one_step_1_month_forecast")
x_eemd_records,x_eemd_predictions,x_eemd_r2,x_eemd_rmse,x_eemd_mae,x_eemd_mape,x_eemd_ppts,x_eemd_timecost = read_two_stage(station="Xianyang",decomposer="eemd",predict_pattern="one_step_1_month_forecast")
z_eemd_records,z_eemd_predictions,z_eemd_r2,z_eemd_rmse,z_eemd_mae,z_eemd_mape,z_eemd_ppts,z_eemd_timecost = read_two_stage(station="Zhangjiashan",decomposer="eemd",predict_pattern="one_step_1_month_forecast")

h_ssa_records,h_ssa_predictions,h_ssa_r2,h_ssa_rmse,h_ssa_mae,h_ssa_mape,h_ssa_ppts,h_ssa_timecost = read_two_stage(station="Huaxian",decomposer="ssa",predict_pattern="one_step_1_month_forecast")
x_ssa_records,x_ssa_predictions,x_ssa_r2,x_ssa_rmse,x_ssa_mae,x_ssa_mape,x_ssa_ppts,x_ssa_timecost = read_two_stage(station="Xianyang",decomposer="ssa",predict_pattern="one_step_1_month_forecast")
z_ssa_records,z_ssa_predictions,z_ssa_r2,z_ssa_rmse,z_ssa_mae,z_ssa_mape,z_ssa_ppts,z_ssa_timecost = read_two_stage(station="Zhangjiashan",decomposer="ssa",predict_pattern="one_step_1_month_forecast")

h_wd_records,h_wd_predictions,h_wd_r2,h_wd_rmse,h_wd_mae,h_wd_mape,h_wd_ppts,h_wd_timecost = read_two_stage(station="Huaxian",decomposer="wd",predict_pattern="one_step_1_month_forecast")
x_wd_records,x_wd_predictions,x_wd_r2,x_wd_rmse,x_wd_mae,x_wd_mape,x_wd_ppts,x_wd_timecost = read_two_stage(station="Xianyang",decomposer="wd",predict_pattern="one_step_1_month_forecast")
z_wd_records,z_wd_predictions,z_wd_r2,z_wd_rmse,z_wd_mae,z_wd_mape,z_wd_ppts,z_wd_timecost = read_two_stage(station="Zhangjiashan",decomposer="wd",predict_pattern="one_step_1_month_forecast")

# plt.legend(
#             loc='upper center',
#             # bbox_to_anchor=(0.08,1.01, 1,0.101),
#             bbox_to_anchor=(0.5,1.25),
#             # bbox_transform=plt.gcf().transFigure,
#             ncol=2,
#             shadow=True,
#             frameon=False,
#             )
plt.figure(figsize=(7.48,8))
plt.subplot(3,2,1)
plt.text(138,-13,'(a)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(h_vmd_records,c='b',label='records')
plt.plot(h_vmd_predictions,c='r',label='VMD-SVR')
plt.plot(huaxian_vmd['pred'],c='cyan',label='VMD-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,2)
h_vmd_xx,h_vmd_linear,h_vmd_xymin,h_vmd_xymax=compute_linear_fit(records=h_vmd_records,predictions=h_vmd_predictions)
h_vmd_s_xx,h_vmd_s_linear,h_vmd_s_xymin,h_vmd_s_xymax=compute_linear_fit(records=huaxian_vmd['orig'].values,predictions=huaxian_vmd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(h_vmd_predictions, h_vmd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="VMD-SVR")
plt.plot(huaxian_vmd['pred'], h_vmd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="VMD-SVR-SUM")
plt.plot(h_vmd_xx, h_vmd_linear, '--', color='red', label='VMD-SVR',linewidth=1.0)
plt.plot(h_vmd_s_xx, h_vmd_s_linear, '--', color='indigo', label='VMD-SVR-SUM',linewidth=1.0)
xymin=min([h_vmd_xymin,h_vmd_s_xymin])
xymax=max([h_vmd_xymax,h_vmd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,3)
plt.text(138,-7,'(b)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(x_vmd_records,c='b',label='records')
plt.plot(x_vmd_predictions,c='r',label='VMD-SVR')
plt.plot(xianyang_vmd['pred'],c='cyan',label='VMD-SVR-SUM')
plt.legend(loc=0,fontsize=8)
plt.subplot(3,2,4)
x_vmd_xx,x_vmd_linear,x_vmd_xymin,x_vmd_xymax=compute_linear_fit(records=x_vmd_records,predictions=x_vmd_predictions)
x_vmd_s_xx,x_vmd_s_linear,x_vmd_s_xymin,x_vmd_s_xymax=compute_linear_fit(records=xianyang_vmd['orig'].values,predictions=xianyang_vmd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(x_vmd_predictions, x_vmd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="VMD-SVR")
plt.plot(xianyang_vmd['pred'], x_vmd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="VMD-SVR-SUM")
plt.plot(x_vmd_xx, x_vmd_linear, '--', color='red', label='VMD-SVR',linewidth=1.0)
plt.plot(x_vmd_s_xx, x_vmd_s_linear, '--', color='indigo', label='VMD-SVR-SUM',linewidth=1.0)
xymin=min([x_vmd_xymin,x_vmd_s_xymin])
xymax=max([x_vmd_xymax,x_vmd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,5)
plt.text(138,-2,'(c)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(z_vmd_records,c='b',label='records')
plt.plot(z_vmd_predictions,c='r',label='VMD-SVR')
plt.plot(zhangjiashan_vmd['pred'],c='cyan',label='VMD-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,6)
z_vmd_xx,z_vmd_linear,z_vmd_xymin,z_vmd_xymax=compute_linear_fit(records=z_vmd_records,predictions=z_vmd_predictions)
z_vmd_s_xx,z_vmd_s_linear,z_vmd_s_xymin,z_vmd_s_xymax=compute_linear_fit(records=zhangjiashan_vmd['orig'].values,predictions=zhangjiashan_vmd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(z_vmd_predictions, z_vmd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="VMD-SVR")
plt.plot(zhangjiashan_vmd['pred'], z_vmd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="VMD-SVR-SUM")
plt.plot(z_vmd_xx, z_vmd_linear, '--', color='red', label='VMD-SVR',linewidth=1.0)
plt.plot(z_vmd_s_xx, z_vmd_s_linear, '--', color='indigo', label='VMD-SVR-SUM',linewidth=1.0)
xymin=min([z_vmd_xymin,z_vmd_s_xymin])
xymax=max([z_vmd_xymax,z_vmd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplots_adjust(left=0.08, bottom=0.08, right=0.98,top=0.98, hspace=0.4, wspace=0.25)
plt.savefig(graphs_path+'huaxian_two_three_vmd_svr.eps',format='EPS',dpi=2000)
plt.savefig(graphs_path+'huaxian_two_three_vmd_svr.tif',format='TIFF',dpi=1000)
plt.show()

#############################################################################################
plt.figure(figsize=(7.48,8))
plt.subplot(3,2,1)
plt.text(138,-13,'(a)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(h_eemd_records,c='b',label='records')
plt.plot(h_eemd_predictions,c='r',label='EEMD-SVR')
plt.plot(huaxian_eemd['pred'],c='cyan',label='EEMD-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,2)
h_eemd_xx,h_eemd_linear,h_eemd_xymin,h_eemd_xymax=compute_linear_fit(records=h_eemd_records,predictions=h_eemd_predictions)
h_eemd_s_xx,h_eemd_s_linear,h_eemd_s_xymin,h_eemd_s_xymax=compute_linear_fit(records=huaxian_eemd['orig'].values,predictions=huaxian_eemd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(h_eemd_predictions, h_eemd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="EEMD-SVR")
plt.plot(huaxian_eemd['pred'], h_eemd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="EEMD-SVR-SUM")
plt.plot(h_eemd_xx, h_eemd_linear, '--', color='red', label='EEMD-SVR',linewidth=1.0)
plt.plot(h_eemd_s_xx, h_eemd_s_linear, '--', color='indigo', label='EEMD-SVR-SUM',linewidth=1.0)
xymin=min([h_eemd_xymin,h_eemd_s_xymin])
xymax=max([h_eemd_xymax,h_eemd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,3)
plt.text(138,-7,'(b)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(x_eemd_records,c='b',label='records')
plt.plot(x_eemd_predictions,c='r',label='EEMD-SVR')
plt.plot(xianyang_eemd['pred'],c='cyan',label='EEMD-SVR-SUM')
plt.legend(loc=0,fontsize=8)
plt.subplot(3,2,4)
x_eemd_xx,x_eemd_linear,x_eemd_xymin,x_eemd_xymax=compute_linear_fit(records=x_eemd_records,predictions=x_eemd_predictions)
x_eemd_s_xx,x_eemd_s_linear,x_eemd_s_xymin,x_eemd_s_xymax=compute_linear_fit(records=xianyang_eemd['orig'].values,predictions=xianyang_eemd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(x_eemd_predictions, x_eemd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="EEMD-SVR")
plt.plot(xianyang_eemd['pred'], x_eemd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="EEMD-SVR-SUM")
plt.plot(x_eemd_xx, x_eemd_linear, '--', color='red', label='EEMD-SVR',linewidth=1.0)
plt.plot(x_eemd_s_xx, x_eemd_s_linear, '--', color='indigo', label='EEMD-SVR-SUM',linewidth=1.0)
xymin=min([x_eemd_xymin,x_eemd_s_xymin])
xymax=max([x_eemd_xymax,x_eemd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,5)
plt.text(138,-3,'(c)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(z_eemd_records,c='b',label='records')
plt.plot(z_eemd_predictions,c='r',label='EEMD-SVR')
plt.plot(zhangjiashan_eemd['pred'],c='cyan',label='EEMD-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,6)
xx,linear_fit1,linear_fit2,xymin,xymax=compute_2_linear_fit(records1=z_eemd_records,predictions1=z_eemd_predictions,records2=zhangjiashan_eemd['orig'].values,predictions2=zhangjiashan_eemd['pred'].values)
# z_eemd_xx,z_eemd_linear,z_eemd_xymin,z_eemd_xymax=compute_linear_fit(records=z_eemd_records,predictions=z_eemd_predictions)
# z_eemd_s_xx,z_eemd_s_linear,z_eemd_s_xymin,z_eemd_s_xymax=compute_linear_fit(records=zhangjiashan_eemd['orig'].values,predictions=zhangjiashan_eemd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(z_eemd_predictions, z_eemd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="EEMD-SVR")
plt.plot(zhangjiashan_eemd['pred'], z_eemd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="EEMD-SVR-SUM")
plt.plot(xx, linear_fit1, '--', color='red', label='EEMD-SVR',linewidth=1.0)
plt.plot(xx, linear_fit2, '--', color='indigo', label='EEMD-SVR-SUM',linewidth=1.0)
# xymin=min([xymin,xymax])
# xymax=max([xymin,xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc="upper left",fontsize=8)

plt.subplots_adjust(left=0.08, bottom=0.08, right=0.98,top=0.98, hspace=0.4, wspace=0.25)
plt.savefig(graphs_path+'huaxian_two_three_eemd_svr.eps',format='EPS',dpi=2000)
plt.savefig(graphs_path+'huaxian_two_three_eemd_svr.tif',format='TIFF',dpi=1000)
plt.show()


#############################################################################################
plt.figure(figsize=(7.48,8))
plt.subplot(3,2,1)
plt.text(138,-13,'(a)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(h_ssa_records,c='b',label='records')
plt.plot(h_ssa_predictions,c='r',label='SSA-SVR')
plt.plot(huaxian_ssa['pred'],c='cyan',label='SSA-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,2)
h_ssa_xx,h_ssa_linear,h_ssa_xymin,h_ssa_xymax=compute_linear_fit(records=h_ssa_records,predictions=h_ssa_predictions)
h_ssa_s_xx,h_ssa_s_linear,h_ssa_s_xymin,h_ssa_s_xymax=compute_linear_fit(records=huaxian_ssa['orig'].values,predictions=huaxian_ssa['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(h_ssa_predictions, h_ssa_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="SSA-SVR")
plt.plot(huaxian_ssa['pred'], h_ssa_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="SSA-SVR-SUM")
plt.plot(h_ssa_xx, h_ssa_linear, '--', color='red', label='SSA-SVR',linewidth=1.0)
plt.plot(h_ssa_s_xx, h_ssa_s_linear, '--', color='indigo', label='SSA-SVR-SUM',linewidth=1.0)
xymin=min([h_ssa_xymin,h_ssa_s_xymin])
xymax=max([h_ssa_xymax,h_ssa_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,3)
plt.text(138,-7,'(b)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(x_ssa_records,c='b',label='records')
plt.plot(x_ssa_predictions,c='r',label='SSA-SVR')
plt.plot(xianyang_ssa['pred'],c='cyan',label='SSA-SVR-SUM')
plt.legend(loc=0,fontsize=8)
plt.subplot(3,2,4)
x_ssa_xx,x_ssa_linear,x_ssa_xymin,x_ssa_xymax=compute_linear_fit(records=x_ssa_records,predictions=x_ssa_predictions)
x_ssa_s_xx,x_ssa_s_linear,x_ssa_s_xymin,x_ssa_s_xymax=compute_linear_fit(records=xianyang_ssa['orig'].values,predictions=xianyang_ssa['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(x_ssa_predictions, x_ssa_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="SSA-SVR")
plt.plot(xianyang_ssa['pred'], x_ssa_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="SSA-SVR-SUM")
plt.plot(x_ssa_xx, x_ssa_linear, '--', color='red', label='SSA-SVR',linewidth=1.0)
plt.plot(x_ssa_s_xx, x_ssa_s_linear, '--', color='indigo', label='SSA-SVR-SUM',linewidth=1.0)
xymin=min([x_ssa_xymin,x_ssa_s_xymin])
xymax=max([x_ssa_xymax,x_ssa_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,5)
plt.text(138,-2,'(c)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(z_ssa_records,c='b',label='records')
plt.plot(z_ssa_predictions,c='r',label='SSA-SVR')
plt.plot(zhangjiashan_ssa['pred'],c='cyan',label='SSA-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,6)
z_ssa_xx,z_ssa_linear,z_ssa_xymin,z_ssa_xymax=compute_linear_fit(records=z_ssa_records,predictions=z_ssa_predictions)
z_ssa_s_xx,z_ssa_s_linear,z_ssa_s_xymin,z_ssa_s_xymax=compute_linear_fit(records=zhangjiashan_ssa['orig'].values,predictions=zhangjiashan_ssa['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(z_ssa_predictions, z_ssa_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="SSA-SVR")
plt.plot(zhangjiashan_ssa['pred'], z_ssa_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="SSA-SVR-SUM")
plt.plot(z_ssa_xx, z_ssa_linear, '--', color='red', label='SSA-SVR',linewidth=1.0)
plt.plot(z_ssa_s_xx, z_ssa_s_linear, '--', color='indigo', label='SSA-SVR-SUM',linewidth=1.0)
xymin=min([z_ssa_xymin,z_ssa_s_xymin])
xymax=max([z_ssa_xymax,z_ssa_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc="upper left",fontsize=8)

plt.subplots_adjust(left=0.08, bottom=0.08, right=0.98,top=0.98, hspace=0.4, wspace=0.25)
plt.savefig(graphs_path+'huaxian_two_three_ssa_svr.eps',format='EPS',dpi=2000)
plt.savefig(graphs_path+'huaxian_two_three_ssa_svr.tif',format='TIFF',dpi=1000)
plt.show()

#############################################################################################
plt.figure(figsize=(7.48,8))
plt.subplot(3,2,1)
plt.text(138,-13,'(a)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(h_wd_records,c='b',label='records')
plt.plot(h_wd_predictions,c='r',label='DWT-SVR')
plt.plot(huaxian_wd['pred'],c='cyan',label='DWT-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,2)
h_wd_xx,h_wd_linear,h_wd_xymin,h_wd_xymax=compute_linear_fit(records=h_wd_records,predictions=h_wd_predictions)
h_wd_s_xx,h_wd_s_linear,h_wd_s_xymin,h_wd_s_xymax=compute_linear_fit(records=huaxian_wd['orig'].values,predictions=huaxian_wd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(h_wd_predictions, h_wd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="DWT-SVR")
plt.plot(huaxian_wd['pred'], h_wd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="DWT-SVR-SUM")
plt.plot(h_wd_xx, h_wd_linear, '--', color='red', label='DWT-SVR',linewidth=1.0)
plt.plot(h_wd_s_xx, h_wd_s_linear, '--', color='indigo', label='DWT-SVR-SUM',linewidth=1.0)
xymin=min([h_wd_xymin,h_wd_s_xymin])
xymax=max([h_wd_xymax,h_wd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,3)
plt.text(138,-7,'(b)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(x_wd_records,c='b',label='records')
plt.plot(x_wd_predictions,c='r',label='DWT-SVR')
plt.plot(xianyang_wd['pred'],c='cyan',label='DWT-SVR-SUM')
plt.legend(loc=0,fontsize=8)
plt.subplot(3,2,4)
x_wd_xx,x_wd_linear,x_wd_xymin,x_wd_xymax=compute_linear_fit(records=x_wd_records,predictions=x_wd_predictions)
x_wd_s_xx,x_wd_s_linear,x_wd_s_xymin,x_wd_s_xymax=compute_linear_fit(records=xianyang_wd['orig'].values,predictions=xianyang_wd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(x_wd_predictions, x_wd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="DWT-SVR")
plt.plot(xianyang_wd['pred'], x_wd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="DWT-SVR-SUM")
plt.plot(x_wd_xx, x_wd_linear, '--', color='red', label='DWT-SVR',linewidth=1.0)
plt.plot(x_wd_s_xx, x_wd_s_linear, '--', color='indigo', label='DWT-SVR-SUM',linewidth=1.0)
xymin=min([x_wd_xymin,x_wd_s_xymin])
xymax=max([x_wd_xymax,x_wd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc=0,fontsize=8)

plt.subplot(3,2,5)
plt.text(138,-2,'(c)')
plt.xlabel("Time(month)")
plt.ylabel("flow(" + r"$10^8m^3$" + ")")
plt.plot(z_wd_records,c='b',label='records')
plt.plot(z_wd_predictions,c='r',label='DWT-SVR')
plt.plot(zhangjiashan_wd['pred'],c='cyan',label='DWT-SVR-SUM')
plt.legend(loc="upper center",bbox_to_anchor=(0.68,0.98),fontsize=8)
plt.subplot(3,2,6)
z_wd_xx,z_wd_linear,z_wd_xymin,z_wd_xymax=compute_linear_fit(records=z_wd_records,predictions=z_wd_predictions)
z_wd_s_xx,z_wd_s_linear,z_wd_s_xymin,z_wd_s_xymax=compute_linear_fit(records=zhangjiashan_wd['orig'].values,predictions=zhangjiashan_wd['pred'].values)
plt.xlabel('predictions(' + r'$10^8m^3$' +')', )
plt.ylabel('records(' + r'$10^8m^3$' + ')', )
plt.plot(z_wd_predictions, z_wd_records,'o', markerfacecolor='w',markeredgecolor='blue',markersize=6.5,label="DWT-SVR")
plt.plot(zhangjiashan_wd['pred'], z_wd_records,'v', markerfacecolor='w',markeredgecolor='springgreen',markersize=6.5,label="DWT-SVR-SUM")
plt.plot(z_wd_xx, z_wd_linear, '--', color='red', label='DWT-SVR',linewidth=1.0)
plt.plot(z_wd_s_xx, z_wd_s_linear, '--', color='indigo', label='DWT-SVR-SUM',linewidth=1.0)
xymin=min([z_wd_xymin,z_wd_s_xymin])
xymax=max([z_wd_xymax,z_wd_s_xymax])
plt.plot([xymin,xymax], [xymin,xymax], '-', color='black', label='Ideal fit',linewidth=1.0)
plt.xlim([xymin,xymax])
plt.ylim([xymin,xymax])
plt.legend(loc="upper left",fontsize=8)

plt.subplots_adjust(left=0.08, bottom=0.08, right=0.98,top=0.98, hspace=0.4, wspace=0.25)
plt.savefig(graphs_path+'huaxian_two_three_wd_svr.eps',format='EPS',dpi=2000)
plt.savefig(graphs_path+'huaxian_two_three_wd_svr.tif',format='TIFF',dpi=1000)
plt.show()





